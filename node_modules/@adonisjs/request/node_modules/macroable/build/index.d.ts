declare type MacroableFn = (...args: any[]) => any;
declare type MacroableMap = {
    [key: string]: MacroableFn;
};
export interface MacroableConstructorContract {
    macro(name: string, callback: MacroableFn): any;
    getter(name: string, callback: MacroableFn, singleton?: boolean): any;
    hydrate(): any;
}
export declare abstract class Macroable {
    protected static _macros: MacroableMap;
    protected static _getters: MacroableMap;
    static macro(name: string, callback: MacroableFn): void;
    static getMacro(name: string): MacroableFn | undefined;
    static hasMacro(name: string): boolean;
    static getter(name: string, callback: MacroableFn, singleton?: boolean): void;
    static getGetter(name: string): MacroableFn | undefined;
    static hasGetter(name: string): boolean;
    static hydrate(): void;
}
export {};
